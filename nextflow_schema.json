{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/./master/nextflow_schema.json",
    "title": "epi2me-labs/wf-artic",
    "description": "ARTIC SARS-CoV-2 workflow and reporting.",
    "url": "https://github.com/epi2me-labs/wf-artic",
    "type": "object",
    "definitions": {
        "basic_input_output_options": {
            "title": "Basic Input/Output Options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "properties": {
                "out_dir": {
                    "type": "string",
                    "default": "output",
                    "format": "directory-path",
                    "description": "Directory for output of all user-facing files."
                },
                "fastq": {
                    "type": "string",
                    "format": "path",
                    "demo_data": "${projectDir}/test_data/fastq",
                    "description": "A fastq file or directory containing fastq input files or directories of input files.",
                    "help_text": "If directories named \\\"barcode*\\\" are found under the `--fastq` directory the data is assumed to be multiplex and each barcode directory will be processed independently. If `.fastq(.gz)` files are found under the `--fastq` directory the sample is assumed to not be multiplexed. In this second case `--sample` should be a simple name rather than a CSV file."
                },
                "sample": {
                    "type": "string",
                    "description": "A sample name for non-multiplexed data. Permissible if passing a file or directory of .fastq(.gz)."
                },
                "sample_sheet": {
                    "type": "string",
                    "format": "file-path",
                    "description": "CSV file with columns named `barcode`, `sample_id` and `type`. Permissible if passing a directory containing barcodeXX sub-directories."
                },
                "genotype_variants": {
                    "type": "string",
                    "description": "Report genotyping information for scheme's known variants of interest, optionally provide file path as argument."
                },
                "sanitize_fastq": {
                    "type": "boolean",
                    "description": "Use additional heuristics to identify barcodes from file paths.",
                    "help_text": "Enabling this option will group together files into samples by the presence of strings of the form `barcodeXXX` present in filenames, rather than simply files grouped into directories (as output by MinKNOW and the Guppy basecaller)."
                }
            },
            "required": [
                "fastq"
            ]
        },
        "primer_scheme_selection": {
            "title": "Primer Scheme Selection",
            "type": "object",
            "fa_icon": "fas fa-code",
            "description": "Reference genome related files and options required for the workflow.",
            "properties": {
                "scheme_name": {
                    "type": "string",
                    "default": "SARS-CoV-2",
                    "description": "Scheme name."
                },
                "scheme_version": {
                    "type": "string",
                    "default": "ARTIC/V3",
                    "description": "Scheme version."
                },
                "custom_scheme": {
                    "type": "string",
                    "description": "Path to custom scheme."
                },
                "scheme_dir": {
                    "type": "string",
                    "description": "Path to primer scheme.",
                    "default": "primer_schemes"
                }
            }
        },
        "meta_data": {
            "title": "Meta Data",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "report_name": {
                    "type": "string",
                    "default": "report",
                    "description": "Output report filename suffix."
                },
                "lab_id": {
                    "type": "string",
                    "description": "Laboratory identifier, used in reporting."
                },
                "testkit": {
                    "type": "string",
                    "description": "Test kit identifier, used in reporting."
                }
            }
        },
        "advanced_options": {
            "title": "Advanced options",
            "type": "object",
            "description": "Data filtering and algorithm options",
            "default": "",
            "properties": {
                "list_schemes": {
                    "type": "boolean",
                    "default": false,
                    "description": "List primer schemes and exit without running analysis."
                },
                "min_len": {
                    "type": "number",
                    "description": "Minimum read length (default: set by scheme)."
                },
                "max_len": {
                    "type": "number",
                    "description": "Maximum read length (default: set by scheme)."
                },
                "max_softclip_length": {
                    "type": "integer",
                    "description": "Remove reads with alignments showing large softclipping"
                },
                "update_data": {
                    "type": "boolean",
                    "default": false,
                    "description": "Update pangoin & Nextclade data at runtime."
                },
                "pangolin_version": {
                    "type": "string",
                    "default": "4.1.1",
                    "hidden": false
                },
                "pangolin_options": {
                    "type": "string",
                    "hidden": true,
                    "description": "Pass optoins to pangolin, use like this \"--analysis-mode fast --min-length 26000\"."
                },
                "nextclade_version": {
                    "type": "string",
                    "default": "1.11.0",
                    "hidden": false
                },
                "nextclade_data_tag": {
                    "type": "string",
                    "hidden": false
                },
                "normalise": {
                    "type": "integer",
                    "default": "200",
                    "description": "Depth ceiling for depth of coverage normalisation"
                },
                "medaka_model": {
                    "type": "string",
                    "default": "r941_min_hac_variant_g507",
                    "description": "Medaka model name.",
                    "enum": [
                        "r103_fast_variant_g507",
                        "r103_hac_variant_g507",
                        "r103_prom_variant_g3210",
                        "r103_sup_variant_g507",
                        "r941_min_fast_variant_g507",
                        "r941_min_hac_variant_g507",
                        "r941_min_sup_variant_g507",
                        "r941_prom_fast_variant_g507",
                        "r941_prom_hac_variant_g507",
                        "r941_prom_sup_variant_g507",
                        "r941_prom_variant_g303",
                        "r941_prom_variant_g322",
                        "r941_prom_variant_g360"
                    ],
                    "help_text": "The correct medaka model to use is determined by the Guppy basecaller version, see [Medaka Models](https://github.com/nanoporetech/medaka#models) for more information."
                }
            },
            "fa_icon": "fas fa-cogs"
        },
        "reporting_options": {
            "title": "Reporting Options",
            "type": "object",
            "description": "Options controlling report outputs",
            "default": "",
            "properties": {
                "report_depth": {
                    "type": "integer",
                    "default": 100,
                    "description": "Min. depth for percentage coverage. (e.g. 89% genome covered at > `report_depth`)",
                    "minimum": 0,
                    "maximum": 100
                },
                "report_clade": {
                    "type": "boolean",
                    "default": true,
                    "description": "Show results of Nextclade analysis in report."
                },
                "report_coverage": {
                    "type": "boolean",
                    "default": true,
                    "description": "Show genome coverage traces in report."
                },
                "report_lineage": {
                    "type": "boolean",
                    "default": true,
                    "description": "Show results of Pangolin analysis in report."
                },
                "report_variant_summary": {
                    "type": "boolean",
                    "default": true,
                    "description": "Show / hide variant information in report."
                },
                "report_detailed": {
                    "type": "boolean",
                    "default": false,
                    "description": "Show / hide some extra plots for detailed batch analysis."
                }
            },
            "fa_icon": "fas fa-address-card",
            "help_text": ""
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "far fa-question-circle",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/basic_input_output_options"
        },
        {
            "$ref": "#/definitions/primer_scheme_selection"
        },
        {
            "$ref": "#/definitions/meta_data"
        },
        {
            "$ref": "#/definitions/advanced_options"
        },
        {
            "$ref": "#/definitions/reporting_options"
        },
        {
            "$ref": "#/definitions/generic_options"
        }
    ],
    "properties": {
        "aws_image_prefix": {
            "type": "string",
            "hidden": true
        },
        "aws_queue": {
            "type": "string",
            "hidden": true
        },
        "wfversion": {
            "type": "string",
            "default": "v0.3.18",
            "hidden": true
        },
        "_min_len": {
            "type": "string",
            "hidden": true
        },
        "_max_len": {
            "type": "string",
            "hidden": true
        },
        "_max_softclip_length": {
            "type": "string",
            "hidden": true
        },
        "_pangolin_options": {
            "type": "string",
            "hidden": true
        },
        "monochrome_logs": {
            "type": "boolean"
        },
        "validate_params": {
            "type": "boolean",
            "default": true
        },
        "show_hidden_params": {
            "type": "boolean"
        }
    },
    "docs": {
        "intro": "## Introduction\n\nThe wf-artic workflow implements a slightly modified ARTIC FieldBioinformatics\nworkflow for the purpose of preparing consensus sequences from SARS-CoV-2\ngenomes that have been DNA sequenced using a pooled tiling amplicon strategy.\n\nThe workflow consumes a folder containing demultiplexed sequence reads as\nprepared by either MinKNOW or Guppy. The workflow needs to know the primer\nscheme that has been used during genome amplication and library preparation\ne.g. ARTIC/V3 or ONT_Midnight/V1. Other parameters can be specified to e.g.\nassign sample names to the barcodes or to adjust the length distribution of\nacceptable amplicon sequences.\n\nDNA sequences in FASTQ format are aggregated, filtered for sequence length and\nquality characteristics and are mapped to the reference SARS-CoV-2 genome using\nminimap2. A primer-scheme specific bed file is used to identify the regions of\nthe mapped sequences that correspond to synthetic sequences (primers) - these\nregions are clipped to ensure that sequences are entirely of biological origin.\nThe retained sequences are used to prepare a consensus sequence that is then\npolished using Medaka and variant calling is performed to produce a VCF file of\ngenetic differences relative to the reference genome. The consensus sequence is\nannotated for virus clade information using NextClade and a strain assignment\nis performed using Pangolin.\n\nThe completed analysis is summarised in an HTML format report that summarises\nkey information that includes number of reads, depth of coverage information\nper amplicon and both the Nextclade and Pangolin information. \n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "links": "## Useful links\n\n* [medaka](https://www.github.com/nanoporetech/medaka)\n* [artic](https://github.com/artic-network/fieldbioinformatics)\n* [nextflow](https://www.nextflow.io/)\n* [docker](https://www.docker.com/products/docker-desktop)\n* [conda](https://docs.conda.io/en/latest/miniconda.html)\n"
    }
}